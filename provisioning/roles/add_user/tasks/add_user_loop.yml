---
- name: "Ensure the {{ user_to_add.username }} exists"
  user:
    name: "{{ user_to_add.username }}"
    groups: "{{ user_to_add.groups|join(',') if groups|length > 0 else omit }}"
    append: true
    home: "/home/{{ user_to_add.username }}"
    state: present

- name: Ensure .ssh directory exists with the correct permissions
  file:
    path: "/home/{{ user_to_add.username }}/.ssh"
    state: directory
    mode: "u=rwx"
    owner: "{{ user_to_add.username }}"

- name: "Copy {{ user_to_add.username }}_{{ user_to_add.host|default(inventory_hostname, true) }}_rsa to id_rsa"
  copy:
    src: "{{ key_dir }}/{{ user_to_add.username }}_{{ user_to_add.host|default(inventory_hostname, true) }}_rsa"
    dest: "/home/{{ user_to_add.username }}/.ssh/id_rsa"
    mode: "u=rw"
    owner: "{{ user_to_add.username }}"
    backup: yes

- name: "Copy {{ user_to_add.username }}_{{ user_to_add.host|default(inventory_hostname, true) }}_rsa/pub to id_rsa.pub"
  copy:
    src: "{{ key_dir }}/{{ user_to_add.username }}_{{ user_to_add.host|default(inventory_hostname, true) }}_rsa.pub"
    dest: "/home/{{ user_to_add.username }}/.ssh/id_rsa.pub"
    mode: "u=rw,go=r"
    owner: "{{ user_to_add.username }}"
    backup: yes

- name: "Create authorized_keys for {{ user_to_add.username }}"
  authorized_key:
    user: "{{ user_to_add.username }}"
    state: present
    key: "{{ lookup('file', \"{{ key_dir }}/{{ item.username }}_{{ item.host|default(inventory_hostname, true) }}_rsa.pub\") }}"
    exclusive: "{{ true if user_to_add.exclusive_keys|default(false, true) == true else omit }}"
  with_items: "{{ user_to_add.keys_to_authorize }}"

- name: "Ensure {{ user_to_add.username }} owns /home/{{ user_to_add.username }}"
  file:
    path: "/home/{{ user_to_add.username }}"
    state: directory
    owner: "{{ user_to_add.username }}"
    recurse: yes
    mode: "u=rwx"
  when: user_to_add.chown_home == true

- name: "Remove sudo passwd for {{ user_to_add.username }}"
  template:
    src: etc/sudoers.d/user
    dest: "/etc/sudoers.d/{{ user_to_add.username }}"
    mode: u=r,g=r
    owner: root
    validate: "/usr/sbin/visudo -c -f %s"
  when: user_to_add.easy_sudo|default(false, true) == true
  notify: "sudoers.d updated"
